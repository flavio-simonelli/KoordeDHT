// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.19.6
// source: dht/v1/node.proto

package dhtv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`           // Unique identifier for the node (endianess non importante perchÃ¨ vengono creati e usati come byte array e non vengono mai interpretati come numeri)
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"` // Network address of the node (e.g., IP:Port)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_dht_v1_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_dht_v1_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_dht_v1_node_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Node) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// Richiesta per trovare il successore responsabile di "id".
type FindSuccessorRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID target nel ring
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindSuccessorRequest) Reset() {
	*x = FindSuccessorRequest{}
	mi := &file_dht_v1_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindSuccessorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSuccessorRequest) ProtoMessage() {}

func (x *FindSuccessorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dht_v1_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSuccessorRequest.ProtoReflect.Descriptor instead.
func (*FindSuccessorRequest) Descriptor() ([]byte, []int) {
	return file_dht_v1_node_proto_rawDescGZIP(), []int{1}
}

func (x *FindSuccessorRequest) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

// Risposta: nodo successore responsabile di "id".
type FindSuccessorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindSuccessorResponse) Reset() {
	*x = FindSuccessorResponse{}
	mi := &file_dht_v1_node_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindSuccessorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSuccessorResponse) ProtoMessage() {}

func (x *FindSuccessorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dht_v1_node_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSuccessorResponse.ProtoReflect.Descriptor instead.
func (*FindSuccessorResponse) Descriptor() ([]byte, []int) {
	return file_dht_v1_node_proto_rawDescGZIP(), []int{2}
}

func (x *FindSuccessorResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

var File_dht_v1_node_proto protoreflect.FileDescriptor

const file_dht_v1_node_proto_rawDesc = "" +
	"\n" +
	"\x11dht/v1/node.proto\x12\x06dht.v1\x1a\x1bgoogle/protobuf/empty.proto\"0\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\"&\n" +
	"\x14FindSuccessorRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\"9\n" +
	"\x15FindSuccessorResponse\x12 \n" +
	"\x04node\x18\x01 \x01(\v2\f.dht.v1.NodeR\x04node2\xa9\x02\n" +
	"\x03DHT\x12L\n" +
	"\rFindSuccessor\x12\x1c.dht.v1.FindSuccessorRequest\x1a\x1d.dht.v1.FindSuccessorResponse\x126\n" +
	"\x0eGetPredecessor\x12\x16.google.protobuf.Empty\x1a\f.dht.v1.Node\x124\n" +
	"\fGetSuccessor\x12\x16.google.protobuf.Empty\x1a\f.dht.v1.Node\x12.\n" +
	"\x06Notify\x12\f.dht.v1.Node\x1a\x16.google.protobuf.Empty\x126\n" +
	"\x04Ping\x12\x16.google.protobuf.Empty\x1a\x16.google.protobuf.EmptyB@Z>github.com/flaviosimonelli/KoordeDHT/internal/api/dht/v1;dhtv1b\x06proto3"

var (
	file_dht_v1_node_proto_rawDescOnce sync.Once
	file_dht_v1_node_proto_rawDescData []byte
)

func file_dht_v1_node_proto_rawDescGZIP() []byte {
	file_dht_v1_node_proto_rawDescOnce.Do(func() {
		file_dht_v1_node_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_dht_v1_node_proto_rawDesc), len(file_dht_v1_node_proto_rawDesc)))
	})
	return file_dht_v1_node_proto_rawDescData
}

var file_dht_v1_node_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_dht_v1_node_proto_goTypes = []any{
	(*Node)(nil),                  // 0: dht.v1.Node
	(*FindSuccessorRequest)(nil),  // 1: dht.v1.FindSuccessorRequest
	(*FindSuccessorResponse)(nil), // 2: dht.v1.FindSuccessorResponse
	(*emptypb.Empty)(nil),         // 3: google.protobuf.Empty
}
var file_dht_v1_node_proto_depIdxs = []int32{
	0, // 0: dht.v1.FindSuccessorResponse.node:type_name -> dht.v1.Node
	1, // 1: dht.v1.DHT.FindSuccessor:input_type -> dht.v1.FindSuccessorRequest
	3, // 2: dht.v1.DHT.GetPredecessor:input_type -> google.protobuf.Empty
	3, // 3: dht.v1.DHT.GetSuccessor:input_type -> google.protobuf.Empty
	0, // 4: dht.v1.DHT.Notify:input_type -> dht.v1.Node
	3, // 5: dht.v1.DHT.Ping:input_type -> google.protobuf.Empty
	2, // 6: dht.v1.DHT.FindSuccessor:output_type -> dht.v1.FindSuccessorResponse
	0, // 7: dht.v1.DHT.GetPredecessor:output_type -> dht.v1.Node
	0, // 8: dht.v1.DHT.GetSuccessor:output_type -> dht.v1.Node
	3, // 9: dht.v1.DHT.Notify:output_type -> google.protobuf.Empty
	3, // 10: dht.v1.DHT.Ping:output_type -> google.protobuf.Empty
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_dht_v1_node_proto_init() }
func file_dht_v1_node_proto_init() {
	if File_dht_v1_node_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_dht_v1_node_proto_rawDesc), len(file_dht_v1_node_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dht_v1_node_proto_goTypes,
		DependencyIndexes: file_dht_v1_node_proto_depIdxs,
		MessageInfos:      file_dht_v1_node_proto_msgTypes,
	}.Build()
	File_dht_v1_node_proto = out.File
	file_dht_v1_node_proto_goTypes = nil
	file_dht_v1_node_proto_depIdxs = nil
}
