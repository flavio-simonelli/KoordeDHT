logger:
  active: true             # Enable or disable logging (true | false)
  level: "info"            # Minimum log level: debug | info | warn | error
  encoding: "console"      # Log output format: console (human-readable) | json
  mode: "stdout"           # Log destination: stdout | file

  file:                    # File logging settings (used only if mode = file)
    path: "logs/app.log"   # Path to the log file
    maxSize: 5             # Maximum size (in MB) per log file before rotation
    maxBackups: 3          # Number of rotated log files to retain
    maxAge: 1              # Maximum age (in days) to retain old log files
    compress: true         # Compress old log files when rotating

dht:
  idBits: 8                # Identifier space size (keyspace = 2^idBits)
  mode: "private"          # Network mode: public (real network) | private (local/isolated)

  bootstrap:
    mode: "static"              # Bootstrap strategy: dns | static
    dnsName: "bootstrap.koorde.local" # DNS name used when mode = dns
    srv: false                  # Use DNS SRV records if true, otherwise A/AAAA records
    port: 35761                 # Bootstrap port (used only when srv = false)
    peers: []                   # Static peer list (used only when mode = static)

  deBruijn:
    degree: 2              # Degree of the de Bruijn graph (2 = minimal, log n = optimal; must be a power of 2 for binary string representation)
    fixInterval: 10s       # Periodic refresh interval for de Bruijn pointers

  faultTolerance:
    successorListSize: 4   # Number of successors to maintain (â‰ˆ log n for fault tolerance)
    stabilizationInterval: 5s  # Periodic interval for successor stabilization
    failureTimeout: 3s     # Timeout for gRPC calls during stabilization; successors exceeding this timeout are marked as failed

node:
  id: ""                   # Node identifier in hexadecimal (empty = random ID)
  host: ""                 # Server host address (empty = all interfaces, depending on DHT mode)
  port: 0                  # gRPC server port (0 = automatically select a free port)

telemetry:
  tracing:
    enabled: true          # Enable or disable distributed tracing (true | false)
    exporter: jaeger       # Tracing exporter to use (currently only Jaeger is supported)
